version: '3.9'

services:
  # PostgreSQL Service
  postgres:
    image: postgres:16.3
    networks:
      - internal_network
      - external_network
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGPORT: ${POSTGRES_PORT}
    ports:
      - ${POSTGRES_PORT}:${POSTGRES_PORT}
    volumes:
      - clinical_cases_bot_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  # Redis Service
  redis:
    image: redis:7.2.4
    networks:
      - internal_network
      - external_network
    env_file: .env
    volumes:
      - clinical_cases_bot_redis_data:/data
    command: redis-server --port ${REDIS_PORT} --requirepass ${REDIS_PASSWORD}
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 5s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:RELEASE.2025-05-24T17-08-30Z
    networks:
      - internal_network
      - external_network
    env_file: .env
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3

  bot:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - redis
      - postgres
      - minio
    env_file: .env
    networks:
      - internal_network
      - external_network
    volumes:
      - ${LOGGING_DIR}:/log
#    extra_hosts:
#      - "db:172.17.0.1"

networks:
  internal_network:
    internal: true
  external_network:

volumes:
  clinical_cases_bot_redis_data:
  clinical_cases_bot_postgres_data:
  minio_data:
